// <auto-generated />
using System;
using ControlMesh.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ControlMesh.Database.Migrations
{
    [DbContext(typeof(ControlMeshDataContext))]
    [Migration("20230322091340_AddedCustomProperties")]
    partial class AddedCustomProperties
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ControlMesh.Database.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("ControlMesh.Database.Models.MessageCustomProperties", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EndPoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MessageForeignKey")
                        .HasColumnType("int");

                    b.Property<string>("MessageType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MessageForeignKey")
                        .IsUnique();

                    b.ToTable("MessageCustomProperties");
                });

            modelBuilder.Entity("ControlMesh.Database.Models.MessageSystemProperties", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrelationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeadLetterErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeadLetterReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeadLetterSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeliveryCount")
                        .HasColumnType("int");

                    b.Property<long>("EnqueuedSequenceNumber")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("EnqueuedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("ExpiresAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LockToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("LockedUntil")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("MessageForeignKey")
                        .HasColumnType("int");

                    b.Property<string>("MessageId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MessagePropertyId")
                        .HasColumnType("int");

                    b.Property<string>("PartitionKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReplyTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReplyToSessionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ScheduledEnqueueTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("SequenceNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("SessionsId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("TimeToLive")
                        .HasColumnType("time");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionPartitionKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MessageForeignKey")
                        .IsUnique();

                    b.ToTable("MessageSystemProperties");
                });

            modelBuilder.Entity("ControlMesh.Database.Models.MessageCustomProperties", b =>
                {
                    b.HasOne("ControlMesh.Database.Models.Message", "Message")
                        .WithOne("MessageCustomProperties")
                        .HasForeignKey("ControlMesh.Database.Models.MessageCustomProperties", "MessageForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Message");
                });

            modelBuilder.Entity("ControlMesh.Database.Models.MessageSystemProperties", b =>
                {
                    b.HasOne("ControlMesh.Database.Models.Message", "Message")
                        .WithOne("MessageSystemProperties")
                        .HasForeignKey("ControlMesh.Database.Models.MessageSystemProperties", "MessageForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Message");
                });

            modelBuilder.Entity("ControlMesh.Database.Models.Message", b =>
                {
                    b.Navigation("MessageCustomProperties");

                    b.Navigation("MessageSystemProperties");
                });
#pragma warning restore 612, 618
        }
    }
}
